name: build-test-deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  common-setup:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Cache PNPM Store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  build-test-web:
    needs: common-setup
    runs-on: ubuntu-20.04
    steps:
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --filter=web

      - name: Build the app
        run: pnpm nx build web

      - name: Test the app
        run: pnpm nx test web

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes

  build-test-server:
    needs: common-setup
    runs-on: ubuntu-20.04
    steps:
      - name: Install Dependencies (Server app)
        run: pnpm install --frozen-lockfile --filter=server

      - name: Build server app
        run: pnpm nx build server

      - name: Run server app tests
        run: pnpm nx test server

      - name: Deploy to Render
        run: curl -fsSL ${{ secrets.RENDER_WEBHOOK }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
